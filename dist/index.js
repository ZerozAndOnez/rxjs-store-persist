"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const localForage = require("localforage");
const middleware_storage_1 = require("./middleware-storage");
const options_1 = require("./options");
exports.getAllDataFromLocalForage = (options) => {
    options_1.config.keys = options.keys;
    options_1.config.storage = middleware_storage_1.middlewareStorage;
    localForage.config({
        driver: localForage.INDEXEDDB,
        name: 'NGRX Storage',
        version: 1.0,
        size: 4980736,
        storeName: 'keyvaluepairs',
        description: 'NGRX storage persist'
    });
    return localForage.keys()
        .then(keys => {
        return Promise.all(keys.map((key) => localForage.getItem(key).then(data => [key, data])));
    })
        .then(dataWithKeys => {
        const dataStorage = dataWithKeys.reduce((previousValue, [key, data]) => {
            previousValue[key] = data;
            return previousValue;
        }, {});
        middleware_storage_1.middlewareStorage.dataStorage = dataStorage;
    });
};
exports.default = localForage;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi9zcmMvaW5kZXgudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7QUFBQSwyQ0FBMkM7QUFDM0MsNkRBQXVEO0FBQ3ZELHVDQUFnRDtBQUluQyxRQUFBLHlCQUF5QixHQUFHLENBQUMsT0FBc0IsRUFBRSxFQUFFO0lBQ2xFLGdCQUFNLENBQUMsSUFBSSxHQUFHLE9BQU8sQ0FBQyxJQUFJLENBQUM7SUFDM0IsZ0JBQU0sQ0FBQyxPQUFPLEdBQUcsc0NBQWlCLENBQUM7SUFDbkMsV0FBVyxDQUFDLE1BQU0sQ0FBQztRQUNqQixNQUFNLEVBQVEsV0FBVyxDQUFDLFNBQVM7UUFDbkMsSUFBSSxFQUFVLGNBQWM7UUFDNUIsT0FBTyxFQUFPLEdBQUc7UUFDakIsSUFBSSxFQUFVLE9BQU87UUFDckIsU0FBUyxFQUFLLGVBQWU7UUFDN0IsV0FBVyxFQUFHLHNCQUFzQjtLQUNyQyxDQUFDLENBQUM7SUFFSCxPQUFPLFdBQVcsQ0FBQyxJQUFJLEVBQUU7U0FDdEIsSUFBSSxDQUFDLElBQUksQ0FBQyxFQUFFO1FBQ1gsT0FBTyxPQUFPLENBQUMsR0FBRyxDQUNoQixJQUFJLENBQUMsR0FBRyxDQUNOLENBQUMsR0FBRyxFQUFFLEVBQUUsQ0FBQyxXQUFXLENBQUMsT0FBTyxDQUFDLEdBQUcsQ0FBQyxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsRUFBRSxDQUFDLENBQUMsR0FBRyxFQUFFLElBQUksQ0FBQyxDQUFDLENBQzVELENBQ0YsQ0FBQztJQUNKLENBQUMsQ0FBQztTQUNELElBQUksQ0FBQyxZQUFZLENBQUMsRUFBRTtRQUNuQixNQUFNLFdBQVcsR0FBRyxZQUFZLENBQUMsTUFBTSxDQUFDLENBQUMsYUFBa0IsRUFBRSxDQUFDLEdBQUcsRUFBRSxJQUFJLENBQUMsRUFBRSxFQUFFO1lBQzFFLGFBQWEsQ0FBUyxHQUFHLENBQUMsR0FBRyxJQUFJLENBQUM7WUFDbEMsT0FBTyxhQUFhLENBQUM7UUFDdkIsQ0FBQyxFQUFFLEVBQUUsQ0FBQyxDQUFDO1FBQ1Asc0NBQWlCLENBQUMsV0FBVyxHQUFHLFdBQVcsQ0FBQztJQUM5QyxDQUFDLENBQUMsQ0FBQztBQUNQLENBQUMsQ0FBQztBQUVGLGtCQUFlLFdBQVcsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCAqIGFzIGxvY2FsRm9yYWdlIGZyb20gJ2xvY2FsZm9yYWdlJztcclxuaW1wb3J0IHttaWRkbGV3YXJlU3RvcmFnZX0gZnJvbSBcIi4vbWlkZGxld2FyZS1zdG9yYWdlXCI7XHJcbmltcG9ydCB7Y29uZmlnLCBTdG9yYWdlQ29uZmlnfSBmcm9tIFwiLi9vcHRpb25zXCI7XHJcblxyXG5cclxuXHJcbmV4cG9ydCBjb25zdCBnZXRBbGxEYXRhRnJvbUxvY2FsRm9yYWdlID0gKG9wdGlvbnM6IFN0b3JhZ2VDb25maWcpID0+IHtcclxuICBjb25maWcua2V5cyA9IG9wdGlvbnMua2V5cztcclxuICBjb25maWcuc3RvcmFnZSA9IG1pZGRsZXdhcmVTdG9yYWdlO1xyXG4gIGxvY2FsRm9yYWdlLmNvbmZpZyh7XHJcbiAgICBkcml2ZXIgICAgICA6IGxvY2FsRm9yYWdlLklOREVYRUREQixcclxuICAgIG5hbWUgICAgICAgIDogJ05HUlggU3RvcmFnZScsXHJcbiAgICB2ZXJzaW9uICAgICA6IDEuMCxcclxuICAgIHNpemUgICAgICAgIDogNDk4MDczNixcclxuICAgIHN0b3JlTmFtZSAgIDogJ2tleXZhbHVlcGFpcnMnLFxyXG4gICAgZGVzY3JpcHRpb24gOiAnTkdSWCBzdG9yYWdlIHBlcnNpc3QnXHJcbiAgfSk7XHJcblxyXG4gIHJldHVybiBsb2NhbEZvcmFnZS5rZXlzKClcclxuICAgIC50aGVuKGtleXMgPT4ge1xyXG4gICAgICByZXR1cm4gUHJvbWlzZS5hbGwoXHJcbiAgICAgICAga2V5cy5tYXAoXHJcbiAgICAgICAgICAoa2V5KSA9PiBsb2NhbEZvcmFnZS5nZXRJdGVtKGtleSkudGhlbihkYXRhID0+IFtrZXksIGRhdGFdKVxyXG4gICAgICAgIClcclxuICAgICAgKTtcclxuICAgIH0pXHJcbiAgICAudGhlbihkYXRhV2l0aEtleXMgPT4ge1xyXG4gICAgICBjb25zdCBkYXRhU3RvcmFnZSA9IGRhdGFXaXRoS2V5cy5yZWR1Y2UoKHByZXZpb3VzVmFsdWU6IGFueSwgW2tleSwgZGF0YV0pID0+IHtcclxuICAgICAgICBwcmV2aW91c1ZhbHVlWzxzdHJpbmc+a2V5XSA9IGRhdGE7XHJcbiAgICAgICAgcmV0dXJuIHByZXZpb3VzVmFsdWU7XHJcbiAgICAgIH0sIHt9KTtcclxuICAgICAgbWlkZGxld2FyZVN0b3JhZ2UuZGF0YVN0b3JhZ2UgPSBkYXRhU3RvcmFnZTtcclxuICAgIH0pO1xyXG59O1xyXG5cclxuZXhwb3J0IGRlZmF1bHQgbG9jYWxGb3JhZ2U7XHJcbiJdfQ==